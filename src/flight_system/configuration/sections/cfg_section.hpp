/**
 * =*========GIRAFFE========*=
 * A Unified Flight Command and Control System
 * https://github.com/joshua-jerred/Giraffe
 * https://giraffe.joshuajer.red/
 * =*=======================*=
 *
 * @file   cfg_section.hpp
 * @brief  This file contains the base class for all configuration sections.
 *
 * =*=======================*=
 * @author     Joshua Jerred (https://joshuajer.red)
 * @date       2023-06-12
 * @copyright  2023 (license to be defined)
 */

#ifndef CFG_SECTION_HPP_
#define CFG_SECTION_HPP_

#include "shared_data.hpp"

namespace cfg {

/**
 * @brief This is the base class for all configuration sections.
 *
 * @note This isn't an immediate thing, but this will be slow
 *       if the config is accessed often. However, it is thread safe.
 *       right now and most sections aren't accessed all that often.
 */
class CfgSection {
public:
  CfgSection(data::Streams &streams) : streams_(streams) {
  }

protected:
  mutable std::mutex cfg_lock_ = std::mutex();
  data::Streams &streams_;

  /**
   * @brief Logs a debug message.
   *
   * @note This currently isn't used as the rest is autogenerated,
   * but it really should be.
   *
   * @param id The id of the log.
   * @param info The information to log.
   */
  void error(DiagnosticId id, const std::string &info = "") {
    streams_.log.error(node::Identification::CONFIGURATION, id, info);
  }
};

} // namespace cfg

#endif /* CFG_SECTION_HPP_ */