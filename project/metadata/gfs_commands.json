{
  "FILE_META": {
    "namespace": "cmd",
    "enum_name": "CommandId",
    "enum_type": "uint16_t",
    "generate_string_map": "K_STRING_TO_COMMAND_MAP"
  },
  "general": {
    "unknown": {
      "name": "Unknown",
      "details": "Placeholder, used as a default/fallback value. This commands will be responded to with and error.",
      "value": "0x0000"
    }
  },
  "internal":{
    "SECTION_METADATA": {
      "prefix": "itn"
    },
    "report_descent": {
      "name": "Report Descent",
      "details": "Used by the flight runner to trigger the telemetry module to report the transition to descent.",
      "value": "0x0001",
      "cmd_key": "rds",
      "exclude_from_ui": true
    },
    "report_phase_change": {
      "name": "Report Phase Change",
      "details": "Used across the system to report a phase change to various modules.",
      "value": "0x0002",
      "cmd_key": "rpc",
      "exclude_from_ui": true
    }
  },
  "flight_runner": {
    "SECTION_METADATA": {
      "prefix": "flr"
    },
    "shutdown_system": {
      "name": "Shutdown System",
      "details": "Tells the flight runner to shutdown.",
      "value": "0x1000",
      "cmd_key": "sdn"
    },
    "start_module": {
      "name": "Start Module",
      "details": "Tells the flight runner to start a module given a 3 letter module identifier.",
      "value": "0x1001",
      "cmd_key": "mst",
      "options": [
        {
          "name": "Data Module",
          "value": "dat"
        },
        {
          "name": "Telemetry Module",
          "value": "tel"
        }
      ]
    },
    "stop_module": {
      "name": "Stop Module",
      "details": "Tells the flight runner to stop a module given a 3 letter module identifier.",
      "value": "0x1002",
      "cmd_key": "msp"
    },
    "restart_module": {
      "name": "Restart Module",
      "details": "Tells the flight runner to restart a module given a 3 letter module identifier.",
      "value": "0x1003",
      "cmd_key": "mrt"
    },
    "enter_launch_phase": {
      "name": "Enter Launch Phase",
      "details": "Tells the flight runner to enter launch phase, only works in pre-launch.",
      "value": "0x1004",
      "cmd_key": "elp",
      "exclude_from_ui": true
    },
    "enter_pre_launch_phase": {
      "name": "Enter Pre-Launch Phase",
      "details": "Tells the flight runner to enter pre-launch phase, only works in launch.",
      "value": "0x1005",
      "cmd_key": "epl",
      "exclude_from_ui": true
    },
    "start_bit_test": {
      "name": "Start BIT Test",
      "details": "Request the flight runner to start the BIT test. Only works in pre-launch.",
      "value": "0x1006",
      "cmd_key": "sbt",
      "exclude_from_ui": true
    },
    "stop_bit_test": {
      "name": "Stop BIT Test",
      "details": "Request the flight runner to stop the BIT test. Only works if the tests are running.",
      "value": "0x1007",
      "cmd_key": "xbt",
      "exclude_from_ui": true
    },
    "reset_bit_test": {
      "name": "Reset BIT Test",
      "details": "Request the flight runner to reset the BIT test. Only works if the tests are running.",
      "value": "0x1008",
      "cmd_key": "rbt",
      "exclude_from_ui": true
    }
  },
  "data_module": {
    "SECTION_METADATA": {
      "prefix": "dat"
    },
    "clear_all_errors": {
      "name": "Clear All Errors",
      "details": "Clears all errors from the error frame",
      "value": "0x2000",
      "cmd_key": "cae"
    },
    "clear_specific_error": {
      "name": "Clear a Specific Error",
      "details": "Clears a specific error/diagnostic code from the error frame given an error code (uint16_t) in hex.",
      "value": "0x2001",
      "cmd_key": "cse"
    }
  },
  "telemetry_module": {
    "SECTION_METADATA": {
      "prefix": "tlm"
    },
    "send_num_active_errors": {
      "name": "Send Number of Active Errors",
      "details": "Sends the number of active errors in the error frame.",
      "value": "0x3000",
      "cmd_key": "nae"
    },
    "send_rssi": {
      "name": "Send RSSI",
      "details": "Sends the RSSI value from the telemetry module.",
      "value": "0x3001",
      "cmd_key": "rsi"
    },
    "send_snr": {
      "name": "Send SNR",
      "details": "Sends the SNR value from the telemetry module.",
      "value": "0x3002",
      "cmd_key": "snr"
    },
    "send_aprs_location": {
      "name": "Send APRS Location",
      "details": "Sends the APRS location from the telemetry module.",
      "value": "0x3003",
      "cmd_key": "apl"
    },
    "send_sstv_image": {
      "name": "Send SSTV Image",
      "details": "Sends the SSTV image from the telemetry module. Only works if SSTV is enabled.",
      "value": "0x3004",
      "cmd_key": "stv"
    }
  },
  "extension_module": {
    "SECTION_METADATA": {
      "prefix": "etm"
    },
    "add_pre_configured_extension": {
      "name": "Add Pre-Configured Extension",
      "details": "Adds a pre-configured extension to the configuration.",
      "value": "0x4000",
      "cmd_key": "apc",
      "options": [
        {
          "name": "BME280",
          "value": "bme280"
        },
        {
          "name": "SAM-M8Q",
          "value": "samm8q"
        },
        {
          "name": "DS18B20",
          "value": "ds18b20"
        },
        {
          "name": "MCP3021",
          "value": "mcp3021"
        }
      ]
    },
    "stop_extension": {
      "name": "Stop Extension",
      "details": "Tell the extension module to stop a specified extension.",
      "value": "0x4001",
      "cmd_key": "stp"
    }
  }
}