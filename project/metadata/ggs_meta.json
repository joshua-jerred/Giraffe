{
  "settings": {
    "gfs_connection": {
      "gfs_socket_address": {
        "type": "string",
        "name": "GFS Socket Address",
        "description": "The address for the Giraffe Flight Software socket. The web server will use this to communicate while on the ground.",
        "default": "localhost"
      },
      "gfs_socket_port": {
        "type": "int",
        "name": "GFS Socket Port",
        "description": "The port for the Giraffe Flight Software socket. The web server will use this to communicate while on the ground.",
        "min": 0,
        "max": 65535,
        "default": 7893
      }
    },
    "ggs_settings": {
      "launch_position_set": {
        "type": "bool",
        "name": "Launch Position Set",
        "description": "Whether or not the launch position is set. This is used to determine if the ground station is in a valid state.",
        "default": false
      },
      "launch_position_latitude": {
        "type": "float",
        "name": "Ground Station Latitude",
        "description": "The latitude of the launch site in decimal degrees.",
        "min": -90,
        "max": 90,
        "default": 40
      },
      "launch_position_longitude": {
        "type": "float",
        "name": "Ground Station Longitude",
        "description": "The longitude of the launch site in decimal degrees.",
        "min": -180,
        "max": 180,
        "default": -100
      },
      "launch_position_altitude": {
        "type": "float",
        "name": "Ground Station Altitude",
        "description": "The altitude of the launch site in meters.",
        "min": 0,
        "max": 10000,
        "default": 100
      },
      "launch_position_set_time": {
        "type": "string",
        "name": "Launch Position Set Time",
        "description": "The time that the launch position was set.",
        "default": "unknown"
      },
      "logging_level": {
        "name": "Logging Level",
        "description": "The logging level for the ground station. Error = less logs, Debug = more logs.",
        "type": "enum",
        "options": [
          "error",
          "warn",
          "info",
          "debug"
        ],
        "default": "info"
      },
      "ggs_database_selection": {
        "type": "enum",
        "name": "GGS Database Selection",
        "description": "The database to use for the ground station. MySql is the default but requires configuration. SQLite requires no configuration.",
        "options": [
          "sqlite",
          "mysql"
        ],
        "default": "mysql"
      },
      "gfs_config_interval": {
        "type": "int",
        "name": "GFS Config Interval (ms)",
        "description": "The interval at which the web server will pull the config from the Flight Software.",
        "min": 1000,
        "max": 60000,
        "default": 5000
      },
      "gfs_data_interval": {
        "type": "int",
        "name": "GFS Data Interval (ms)",
        "description": "The interval at which the web server will pull data from the Flight Software.",
        "min": 100,
        "max": 60000,
        "default": 1000
      },
      "gfs_errors_interval": {
        "type": "int",
        "name": "GFS Errors Interval (ms)",
        "description": "The interval at which the web server will pull errors from the Flight Software.",
        "min": 100,
        "max": 60000,
        "default": 1000
      },
      "gfs_log_files_interval": {
        "type": "int",
        "name": "GFS Log Files Interval (ms)",
        "description": "The interval at which the web server will pull log file information from the Flight Software.",
        "min": 1000,
        "max": 60000,
        "default": 1000
      }
    },
    "gdl": {
      "gdl_enabled": {
        "type": "bool",
        "name": "GDL Enabled",
        "description": "Toggle the entire telemetry system on or off. This will disable all telemetry. Useful for debugging!",
        "default": true
      },
      "data_update_interval": {
        "type": "int",
        "name": "GDL Data Update Interval (ms)",
        "description": "The rate at which to poll the Giraffe Data Link Server",
        "min": 100,
        "max": 10000,
        "default": 1000
      },
      "socket_address": {
        "type": "string",
        "name": "GDL Socket Address",
        "description": "The address for the Giraffe Data Logger socket. The web server will use this to communicate while on the ground.",
        "default": "localhost"
      },
      "socket_port": {
        "type": "int",
        "name": "GDL Socket Port",
        "description": "The port for the Giraffe Data Logger socket. The web server will use this to communicate while on the ground.",
        "min": 0,
        "max": 65535,
        "default": 9557
      }
    },
    "influx_db": {
      "influx_enabled": {
        "type": "bool",
        "name": "InfluxDB Enabled",
        "description": "Whether or not to enable InfluxDB.",
        "default": false
      },
      "influx_db_url": {
        "type": "string",
        "name": "Influx URL",
        "description": "The address for the InfluxDB (2.X) server with the port. This should include the protocol (http or https).",
        "default": "localhost:8086"
      },
      "influx_db_token": {
        "type": "string",
        "name": "InfluxDB Access Token",
        "description": "This is stored in plaintext.",
        "default": "none"
      },
      "influx_org": {
        "type": "string",
        "name": "Influx Organization",
        "description": "The organization for the InfluxDB server.",
        "default": "giraffe"
      },
      "influx_bucket": {
        "type": "string",
        "name": "Influx Bucket",
        "description": "The bucket for the InfluxDB server.",
        "default": "giraffe_ground_station"
      },
      "influx_interval_ms": {
        "type": "int",
        "name": "Influx Update Interval (ms)",
        "description": "The interval at which the web server will request updates from the Flight Software.",
        "min": 100,
        "max": 5000,
        "default": 1000
      },
      "influx_retention_duration": {
        "type": "enum",
        "options": [
          "1 Hour",
          "1 Day",
          "1 Week",
          "1 Month",
          "1 Year",
          "INF"
        ],
        "name": "Influx Retention Policy Duration",
        "description": "The retention policy to use for the InfluxDB database.",
        "default": "INF"
      }
    },
    "mysql": {
      "host": {
        "type": "string",
        "name": "Host",
        "description": "The address for the MySQL server.",
        "default": "localhost"
      },
      "port": {
        "type": "int",
        "name": "Port",
        "description": "The port for the MySQL server.",
        "min": 0,
        "max": 65535,
        "default": 3306
      },
      "database": {
        "type": "string",
        "name": "Database",
        "description": "The name of the MySQL database to use.",
        "default": "giraffe_ground_station"
      },
      "username": {
        "type": "string",
        "name": "Username",
        "description": "The username to use for the MySQL database.",
        "default": "ggs_user"
      },
      "password": {
        "type": "string",
        "name": "Password",
        "description": "The password to use for the MySQL database.",
        "default": "ggs_password"
      },
      "log_sql_to_console": {
        "type": "bool",
        "name": "Log Queries to Console",
        "description": "Whether or not to log the SQL queries to the console.",
        "default": false
      }
    },
    "aprs": {
      "ground_station_callsign": {
        "type": "string",
        "name": "Ground Station Call",
        "description": "The call sign of the ground station, including the SSID.",
        "default": "none-1"
      },
      "flight_callsign": {
        "type": "string",
        "name": "Flight Callsign",
        "description": "The call sign of the flight system that we are tracking, including the SSID.",
        "default": "none-11"
      }
    },
    "aprs_fi": {
      "enabled": {
        "type": "bool",
        "name": "APRS.fi Enabled",
        "description": "Whether or not to enable APRS.fi tracking",
        "default": false
      },
      "api_key": {
        "type": "string",
        "name": "APRS.fi API Key",
        "description": "The API key for the APRS.fi API. https://aprs.fi/page/api",
        "default": "none"
      },
      "name": {
        "type": "string",
        "name": "APRS.fi Name",
        "description": "The name of the station to track. This includes the SSID.",
        "default": "none-1"
      },
      "check_interval_s": {
        "type": "int",
        "name": "APRS.fi Check Interval (s)",
        "description": "The interval at which the web server will request updates from APRS.fi. Please be nice to their servers. https://aprs.fi/page/api",
        "min": 180,
        "max": 3600,
        "default": 1800
      }
    },
    "aprs_is": {
      "enabled": {
        "type": "bool",
        "name": "APRS-IS Enabled",
        "description": "Get APRS packets from APRS-IS.",
        "default": false
      },
      "log_other_packets": {
        "type": "bool",
        "name": "Log External Packets",
        "description": "Log packets to the database that are not from the flight system or ground station.",
        "default": false
      },
      "address": {
        "type": "string",
        "name": "APRS-IS Address",
        "description": "Address to the APRS-IS server. This shouldn't be a public APRS-IS server at this time.",
        "default": "localhost"
      },
      "port": {
        "type": "int",
        "name": "APRS-IS Port",
        "description": "The port to connect to the APRS-IS server.",
        "min": 0,
        "max": 65535,
        "default": 10152
      },
      "client_name": {
        "type": "string",
        "name": "APRS-IS Client Name",
        "description": "The name of this client, used to log into APRS-IS. This includes the SSID. ex: KD9GDC-1",
        "default": "none-1"
      },
      "client_passcode": {
        "type": "int",
        "name": "APRS-IS Passcode",
        "description": "Generated APRS-IS passcode",
        "min": 0,
        "max": 65535,
        "default": 1234
      }
    }
  },
  "data": {
    "streams": {
      "users": {
        "name": "GGS WebSocket Users",
        "description": "An object containing all of the users that have connected with statistics.",
        "default": {}
      }
    },
    "stream_stats": {
      "NOT_IN_DB": "NOT_IN_DB",
      "num_current_clients": {
        "name": "Number of Current Clients",
        "description": "The number of clients that are currently connected to the ggs web socket.",
        "default": "unknown"
      },
      "num_current_streams": {
        "name": "Number of Current Streams",
        "description": "The number of streams that are currently open.",
        "default": "unknown"
      },
      "num_current_users": {
        "name": "Number of Current Users",
        "description": "The number of users that are currently connected to the ggs web socket.",
        "default": "unknown"
      },
      "current_users": {
        "name": "Current Users",
        "description": "The users that are currently connected to the ggs web socket.",
        "default": "unknown"
      }
    },
    "status": {
      "this_doesnt_exist": {
        "name": "This Doesn't Exist",
        "description": "This is a made up data point.",
        "default": "unknown"
      }
    },
    "mission_clock": {
      "start_time": {
        "type": "string",
        "name": "Mission Clock Start Time",
        "description": "The time that the mission clock started. (If it is running)",
        "default": "unknown"
      },
      "is_running": {
        "type": "bool",
        "name": "Mission Clock Paused",
        "description": "Whether or not the mission clock is running.",
        "default": false
      }
    }
  }
}