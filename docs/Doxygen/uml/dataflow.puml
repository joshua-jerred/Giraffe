@startuml dataflow

package "Extension1" <<Node>> {
    class BMP180{
        name = "sens1"
    }
    struct "sens1 Data" {
        temperature F : TF
        pressure MBar : MB
    }
}

package "Extension2" <<Node>> {
    class DS18B20{
        name = "temp1"
    }
    struct "DS18B20 Data" {
        temperature F : TF
    }
}

package "Extension3" <<Node>> {
    class SAMM8Q{
        name = "gps1"
    }
    struct "SAMM8Q Data" {
        Lattitude : LT
        Longitude : LG
        Altitude : AL
    }
}

package DataModule <<Rectangle>> {


    package DataStream <<Cloud>> {
        struct DataPacket {
            std::string source
            std::string unit
            std::string data
        }

        protocol "addData(source, unit, data)" {

        }

        struct Stream {
            std::vector<DataPacket>
        }

        protocol parseDataStream {}

        struct DataSnapshot {
            "sens1:TF" | "75"
            "sens1:MB" | "1000"
            "temp1:TF" | "75"
            "gps1:LT" | "latitudedata"
            "gps1:LG" | "longitudedata"
            "gps1:AL" | "altdata"
        }
        note right: DataSnapshot is\n an unordered map
    }

    protocol logSnapshot {
        "Saves the snapshot to a file"
    }

}

package telemetry {
    package sstv {}
    package aprs {}
    package afsk {}
}

protocol healthcheck {
}

Extension1 --> "addData(source, unit, data)"
Extension2 --> "addData(source, unit, data)"
Extension3 --> "addData(source, unit, data)"

"addData(source, unit, data)" --> Stream

Stream --> parseDataStream
parseDataStream --> DataSnapshot

DataSnapshot <.. telemetry
DataSnapshot <.. logSnapshot
DataSnapshot <.. healthcheck




@enduml