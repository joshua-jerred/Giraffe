@startuml

title GDL Transport Layer State Machine

left to right direction

state Idle
state SendBroadcast : Transmit, expect no response
state ReceiveBroadcast : Receive Broadcast, do not respond

[*] --> Idle
Idle -[#orange]-> SendBroadcast : Broadcast Call From Above
SendBroadcast --> Idle : Sent

Idle -[#orange]-> ReceiveBroadcast : Receive Broadcast Call From Below
ReceiveBroadcast --> Idle : Received

state SendMessage {
  WaitCallFromAboveX --> WaitAckX
  note on link
    <b>Call From Above</b>
    create_packet(ackX, data, crc)
    send_packet()
    start_timer()
  end note

  WaitAckX --> WaitAckX
  note on link
    <b>received_packet()</b> 
    <b>&& (bad_crc || ackY)</b>
    do nothing
  end note

  WaitAckX --> WaitAckX
  note on link
    <b>timeout</b>
    resend_identical_packet()
    start_timer()
  end note

  WaitAckX --> WaitCallFromAboveY : max retries

  WaitAckX --> WaitCallFromAboveY
  note on link
    <b>received_packet()</b>
    <b>&&good_crc&&ackX</b>
    stop_timer()
  end note

  WaitCallFromAboveY --> WaitCallFromAboveY
  note on link
    <b>Received Packet</b>
    do nothing
  end note

  WaitCallFromAboveY --> WaitAckY
  note on link
    <b>Call From Above</b>
    create_packet(ackY, data, crc)
    send_packet()
    start_timer()
  end note

  WaitAckY --> WaitAckY
  note on link
    <b>received_packet()</b> 
    <b>&& (bad_crc || ackX)</b>
    do nothing
  end note

  WaitAckY --> WaitAckY
  note on link
    <b>timeout</b>
    resend_identical_packet()
    start_timer()
  end note

  WaitAckY --> WaitCallFromAboveX : max retries

  WaitAckY --> WaitCallFromAboveX
  note on link
    <b>received_packet()</b>
    <b>&&good_crc&&ackY</b>
    stop_timer()
  end note

  WaitCallFromAboveX --> WaitCallFromAboveX
  note on link
    <b>Received Packet</b>
    do nothing
  end note
}

state ReceiveMessage {
  state WaitCallFromBelowX
  state WaitCallFromBelowY

  WaitCallFromBelowX --> WaitCallFromBelowY
  note on link
    <b>received && good_crc</b>
    <b>&& seqX</b>
    send_to_above()
    send_packet(ackX)
  end note

  WaitCallFromBelowY --> WaitCallFromBelowY
  note on link
    <b>received && (bad_crc || have_seqX)</b>
    send_packet(ackX)
    - send ack of last received packet
  end note

  WaitCallFromBelowY --> WaitCallFromBelowX
  note on link
    <b>received && good_crc</b>
    <b>&& seqY</b>
    send_to_above()
    send_packet(seqY)
  end note

  WaitCallFromBelowX --> WaitCallFromBelowX
  note on link
    <b>received && (bad_crc || have_ackY)</b>
    send_packet(ackY)
    - send ack of last received packet
  end note
}

Idle -[#orange]-> SendMessage : Send Call From Above
Idle -[#orange]-> ReceiveMessage : Receive Call From Below


@enduml